{
    "scope": "source.scss, source.sass",

    "completions":
    [
    	// ========== Function ==========

    	// RGB Functions
        { "trigger": "rgb()\tSassFunction", "contents": "rgb(${1:\\$red}, ${2:\\$green}, ${3:\\$blue})"},
        { "trigger": "rgba()\tSassFunction", "contents": "rgba(${1:\\$red}, ${2:\\$green}, ${3:\\$blue}, ${4:\\$alpha})"},
        { "trigger": "rgba()\tSassFunction", "contents": "rgba(${1:\\$color}, ${2:\\$alpha})"},
        { "trigger": "red()\tSassFunction", "contents": "red(${1:\\$color})"},
        { "trigger": "green()\tSassFunction", "contents": "green(${1:\\$color})"},
        { "trigger": "blue()\tSassFunction", "contents": "blue(${1:\\$color})"},
        { "trigger": "mix()\tSassFunction", "contents": "mix(${1:\\$color1}, ${2:\\$color2}, ${3:\\$weight:50%})"},

        // HSL Functions
        { "trigger": "hsl()\tSassFunction", "contents": "hsl(${1:\\$hue}, ${2:\\$saturation}, ${3:\\$lightness})"},
        { "trigger": "hsla()\tSassFunction", "contents": "hsla(${1:\\$hue}, ${2:\\$saturation}, ${3:\\$lightness}, ${4:\\$alpha})"},
        { "trigger": "hue()\tSassFunction", "contents": "hue(${1:\\$color})"},
        { "trigger": "saturation()\tSassFunction", "contents": "saturation(${1:\\$color})"},
        { "trigger": "lightness()\tSassFunction", "contents": "lightness(${1:\\$color})"},
        { "trigger": "adjust-hue()\tSassFunction", "contents": "adjust-hue(${1:\\$color}, ${2:\\$degrees})"},
        { "trigger": "lighten()\tSassFunction", "contents": "lighten(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "darken()\tSassFunction", "contents": "darken(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "saturate()\tSassFunction", "contents": "saturate(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "desaturate()\tSassFunction", "contents": "desaturate(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "grayscale()\tSassFunction", "contents": "grayscale(${1:\\$color})"},
        { "trigger": "complement()\tSassFunction", "contents": "complement(${1:\\$color})"},
        { "trigger": "invert()\tSassFunction", "contents": "invert(${1:\\$color})"},

        // Opacity Functions
        { "trigger": "alpha()\tSassFunction", "contents": "alpha(${1:\\$color})"},
        { "trigger": "opacity()\tSassFunction", "contents": "opacity(${1:\\$color})"},
        { "trigger": "rgba()\tSassFunction", "contents": "rgba(${1:\\$red}, ${2:\\$green}, ${3:\\$blue}, ${4:\\$alpha})"},
        { "trigger": "rgba()\tSassFunction", "contents": "rgba(${1:\\$color}, ${2:\\$alpha})"},
        { "trigger": "opacify()\tSassFunction", "contents": "opacify(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "fade-in()\tSassFunction", "contents": "fade-in(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "transparentize()\tSassFunction", "contents": "transparentize(${1:\\$color}, ${2:\\$amount})"},
        { "trigger": "fade-out()\tSassFunction", "contents": "fade-out(${1:\\$color}, ${2:\\$amount})"},

        // Other Color Functions
        { "trigger": "adjust-color()\tSassFunction", "contents": "adjust-color(${1:\\$color}, ${2:[\\$red]}, ${3:[\\$green]}, ${4:[\\$blue]}, ${5:[\\$hue]}, ${6:[\\$saturation]}, ${7:[\\$lightness]}, ${8:[\\$alpha]})"},
        { "trigger": "scale-color()\tSassFunction", "contents": "scale-color(${1:\\$color}, ${2:[\\$red]}, ${3:[\\$green]}, ${4:[\\$blue]}, ${5:[\\$saturation]}, ${6:[\\$lightness]}, ${7:[\\$alpha]})"},
        { "trigger": "change-color()\tSassFunction", "contents": "change-color(${1:\\$color}, ${2:[\\$red]}, ${3:[\\$green]}, ${4:[\\$blue]}, ${5:[\\$hue]}, ${6:[\\$saturation]}, ${7:[\\$lightness]}, ${8:[\\$alpha]})"},
        { "trigger": "ie-hex_str()\tSassFunction", "contents": "ie-hex_str(${1:\\$color})"},

        // String Functions
        { "trigger": "unquote()\tSassFunction", "contents": "unquote(${1:\\$string})"},
        { "trigger": "quote()\tSassFunction", "contents": "quote(${1:\\$string})"},
        { "trigger": "str-length()\tSassFunction", "contents": "str-length(${1:\\$string})"},
        { "trigger": "str-insert()\tSassFunction", "contents": "str-insert(${1:\\$string}, ${2:\\$insert}, ${3:\\$index})"},
        { "trigger": "str-index()\tSassFunction", "contents": "str-index(${1:\\$string}, ${2:\\$substring})"},
        { "trigger": "str-slice()\tSassFunction", "contents": "str-slice(${1:\\$string}, ${2:\\$start-at}, ${3:\\$end-at:-1})"},
        { "trigger": "to-upper-case()\tSassFunction", "contents": "to-upper-case(${1:\\$string})"},
        { "trigger": "to-lower-case()\tSassFunction", "contents": "to-lower-case(${1:\\$string})"},

        // Number Functions
        { "trigger": "percentage()\tSassFunction", "contents": "percentage(${1:\\$number})"},
        { "trigger": "round()\tSassFunction", "contents": "round(${1:\\$number})"},
        { "trigger": "ceil()\tSassFunction", "contents": "ceil(${1:\\$number})"},
        { "trigger": "floor()\tSassFunction", "contents": "floor(${1:\\$number})"},
        { "trigger": "abs()\tSassFunction", "contents": "abs(${1:\\$number})"},
        { "trigger": "min()\tSassFunction", "contents": "min(${1:\\$numbers...})"},
        { "trigger": "max()\tSassFunction", "contents": "max(${1:\\$numbers...})"},
        { "trigger": "random()\tSassFunction", "contents": "random(${1:\\$limit})"},

        // List Functions
        { "trigger": "length()\tSassFunction", "contents": "length(${1:\\$list})"},
        { "trigger": "nth()\tSassFunction", "contents": "nth(${1:\\$list}, ${2:\\$n})"},
        { "trigger": "set-nth()\tSassFunction", "contents": "set-nth(${1:\\$list}, ${2:\\$n}, ${3:\\$value})"},
        { "trigger": "join()\tSassFunction", "contents": "join(${1:\\$list1}, ${2:\\$list2}, ${3:\\$separator:auto})"},
        { "trigger": "append()\tSassFunction", "contents": "append(${1:\\$list}, ${2:\\$val}, ${3:\\$separator:auto})"},
        { "trigger": "zip()\tSassFunction", "contents": "zip(${1:\\$lists...})"},
        { "trigger": "index()\tSassFunction", "contents": "index(${1:\\$list}, ${2:\\$value})"},
        { "trigger": "list-separator()\tSassFunction", "contents": "list-separator(${1:\\$list})"},

        // Map Functions
        { "trigger": "map-get()\tSassFunction", "contents": "map-get(${1:\\$map}, ${2:\\$key})"},
        { "trigger": "map-merge()\tSassFunction", "contents": "map-merge(${1:\\$map1}, ${2:\\$map2})"},
        { "trigger": "map-remove()\tSassFunction", "contents": "map-remove(${1:\\$map}, ${2:\\$keys...})"},
        { "trigger": "map-keys()\tSassFunction", "contents": "map-keys(${1:\\$map})"},
        { "trigger": "map-values()\tSassFunction", "contents": "map-values(${1:\\$map})"},
        { "trigger": "map-has-key()\tSassFunction", "contents": "map-has-key(${1:\\$map}, ${2:\\$key})"},
        { "trigger": "keywords()\tSassFunction", "contents": "keywords(${1:\\$args})"},

        // Selector Functions
        { "trigger": "selector-nest()\tSassFunction", "contents": "selector-nest(${1:\\$selectors...})"},
        { "trigger": "selector-append()\tSassFunction", "contents": "selector-append(${1:\\$selectors...})"},
        { "trigger": "selector-extend()\tSassFunction", "contents": "selector-extend(${1:\\$selector}, ${2:\\$extendee}, ${3:\\$extender})"},
        { "trigger": "selector-replace()\tSassFunction", "contents": "selector-replace(${1:\\$selector}, ${2:\\$original}, ${3:\\$replacement})"},
        { "trigger": "selector-unify()\tSassFunction", "contents": "selector-unify(${1:\\$selector1}, ${2:\\$selector2})"},
        { "trigger": "is-superselector()\tSassFunction", "contents": "is-superselector(${1:\\$super}, ${2:\\$sub})"},
        { "trigger": "simple-selectors()\tSassFunction", "contents": "simple-selectors(${1:\\$selector})"},
        { "trigger": "selector-parse()\tSassFunction", "contents": "selector-parse(${1:\\$selector})"},

        // Introspection Functions
        { "trigger": "feature-exists()\tSassFunction", "contents": "feature-exists(${1:\\$feature})"},
        { "trigger": "variable-exists()\tSassFunction", "contents": "variable-exists(${1:\\$name})"},
        { "trigger": "global-variable-exists()\tSassFunction", "contents": "global-variable-exists(${1:\\$name})"},
        { "trigger": "function-exists()\tSassFunction", "contents": "function-exists(${1:\\$name})"},
        { "trigger": "mixin-exists()\tSassFunction", "contents": "mixin-exists(${1:\\$name})"},
        { "trigger": "inspect()\tSassFunction", "contents": "inspect(${1:\\$value})"},
        { "trigger": "type-of()\tSassFunction", "contents": "type-of(${1:\\$value})"},
        { "trigger": "unit()\tSassFunction", "contents": "unit(${1:\\$number})"},
        { "trigger": "unitless()\tSassFunction", "contents": "unitless(${1:\\$number})"},
        { "trigger": "comparable()\tSassFunction", "contents": "comparable(${1:\\$number1}, ${2:\\$number2})"},
        { "trigger": "call()\tSassFunction", "contents": "call(${1:\\$name}, ${2:\\$args...})"},

        // Miscellaneous Functions
        { "trigger": "if()\tSassFunction", "contents": "if(${1:\\$condition}, ${2:\\$if-true}, ${3:\\$if-false})"}
        // { "trigger": "unique-id()\tSassFunction", "contents": "unique-id(${1:})"}

    ]
}
